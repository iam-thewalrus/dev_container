services:
  dev:
    build: .
    container_name: python_dev_env
    volumes:
      - .:/app
      - ~/.ssh/id_rsa.pub:/home/developer/.ssh/authorized_keys:ro
      - ./scripts:/app/scripts
    ports:
      - "2222:22"  # SSH port
      - "8888:8888"  # Jupyter Notebook
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=devdb
      - START_JUPYTER=true
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "22"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: timescale/timescaledb:latest-pg15
    container_name: postgres_timescale
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/initialize-timeseriesdb.sql:/docker-entrypoint-initdb.d/initialize-timeseriesdb.sql:ro
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=devdb
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - dev-network
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  pgadmin_data:

networks:
  dev-network:
    driver: bridge